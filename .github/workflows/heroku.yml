name: Heroku
on:
  pull_request:
    types: [opened, synchronize, closed, reopened, labeled]

env:
  HEROKU_TEAM: sfdigitalservices
  HEROKU_PIPELINE: sfgov-design-system
  HEROKU_APP_NAME: sfgov-design-system
  HEROKU_APP_LABEL: heroku-review-app
  HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
      
jobs:
  create-app:
    if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.label.name == env.HEROKU_CREATE_LABEL
    runs-on: ubuntu-latest
    env:
      HEROKU_APP_NAME: ${{ env.HEROKU_APP_NAME }}-pr-${{ env.PR_NUMBER }}
    steps:
      - run: npm i -g heroku
      - run: scripts/heroku/create-app.sh
      - name: create deployment (success)
        if: success()
        run: scripts/deployment/create.sh

  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    env:
      HEROKU_APP_NAME: ${{ env.HEROKU_APP_NAME }}-pr-${{ env.PR_NUMBER }}
    steps:
      - run: npm i -g heroku
      - run: scripts/heroku/deploy.sh
      - if: success()
        run: scripts/deployment/set-status.sh success
      - if: failure()
        run: scripts/deployment/set-status.sh failure

  destroy-app:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    env:
      HEROKU_APP_NAME: ${{ env.HEROKU_APP_NAME }}-pr-${{ env.PR_NUMBER }}
    steps:
      - run: npm i -g heroku
      - run: scripts/heroku/destroy.sh
      - run: scripts/deployment/delete.sh