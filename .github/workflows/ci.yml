name: CI
on: [push]

jobs:
  build:
    if: github.event != 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: npm

      - run: npm ci
      - run: npm run lint

      # this sets NODE_ENV=production for all of the build scripts
      # (`npm ci` doesn't install anything if it's set earlier)
      - run: |
          echo NODE_ENV=production >> $GITHUB_ENV

      # run these separately so that it's easier to see what failed
      - run: npm run build-assets
      - run: npm run build-docs

      # run pre-publish checks
      - run: npm run prepublishOnly

      - uses: primer/publish@v3.0.0
        id: publish
        with:
          npm_args: --unsafe-perm --allow-same-version
          default_branch: main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # if the package was published, add a "branch/{branch}" dist-tag
      # (see: <https://docs.npmjs.com/adding-dist-tags-to-packages>)
      # so that other apps can reference the latest release from a branch
      # with "sfgov-design-system@branch/{branch}"
      - if: steps.publish.conclusion == 'success' && github.ref_type == 'branch'
        env:
          DIST_TAG: branch/${{ github.ref_name }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > $HOME/.npmrc
          npm dist-tag add "$(npm info . name)@$(npm info . version)" "$DIST_TAG"
