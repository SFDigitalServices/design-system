name: CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: npm

      - run: npm install
      - uses: xt0rted/markdownlint-problem-matcher@v1
      - run: npx lerna run lint

      # this sets NODE_ENV=production for all of the build scripts
      - run: echo NODE_ENV=production >> $GITHUB_ENV

      - run: npm run build -w sfgov-design-system
      - run: npm run build -w @sfgov/icons
      - run: npm run build -w @sfgov/react

      - name: Git identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo "NPM_AUTH_TOKEN=${{ secrets.NPM_AUTH_TOKEN }}" >> $GITHUB_ENV
      - name: Publish latest (from 'main' branch)
        if: github.ref == 'refs/heads/main'
        run: |
          lerna version --yes --conventional-commits --create-release github --message 'chore(release): publish'
          lerna publish from-package --yes
        id: publishMain
      - name: Publish prerelease (pull requests)
        if: startsWith(github.ref, 'refs/heads/release-')
        run: lerna publish prerelease --dist-tag next --yes
        id: publishPre
      - name: Publish canary release (all other commits)
        if: ${{ steps.publishMain.outcome == 'skipped' && steps.publishPre.outcome == 'skipped' }}
        run: lerna publish --canary --dist-tag canary --preid canary --yes
