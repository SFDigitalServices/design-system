daemon off;
# Heroku dynos have at least 4 cores.
worker_processes 4;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
  gzip on;
  gzip_comp_level 6;
  gzip_min_length 512;
  gzip_vary on;
  gzip_proxied any;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log logs/access.log;
  error_log stderr error;


	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;

  # redirects need to live outside of the server block
  map $uri $redirect_uri {
    default "none";

    # static redirects: from the left path to the right
    /components/fields-and-forms/     /components/forms/;
    /components/Forms%20and%20fields/ /components/forms/;
    /foundations/spacing/             /design/layout/;
    /resources/icon-library/          /libraries/iconsLibrary/;
    /usage/docs/                      /develop/documentation/;
    /usage/icons/                     /components/icons/;

    # pattern-based redirects live here, in the form:
    # ~{pattern} {path};
    # where {pattern} is a regex and will probably contain capture groups,
    # which will then be referenced in the {path} by their index: $1, $2, etc.
    ~^/foundations/(\w+)/$                        /design/$1;
    ~^/libraries/color/colorInterfaceLibrary/$    /libraries/color/interface/;
    ~^/libraries/color/colorMapsChartsLibrary/$   /libraries/color/maps-charts/;
    ~^/libraries/iconsLibrary/                    /libraries/icons/;
    ~^/usage/(\w+)/?$                             /develop/$1;
  }

	server {
		listen <%= ENV["PORT"] %>;
		client_max_body_size 1M;
    charset UTF-8;
    port_in_redirect off;
    keepalive_timeout 5;
    root website/public;

    location / {
      try_files $uri $uri/ /404.html;
    }
  
    if ($http_x_forwarded_proto != "https") {
      return 301 https://$host$request_uri;
    }

    if ($redirect_uri != "none") {
      rewrite ^ $redirect_uri permanent;
    }  

    # need this b/c setting $fallback to =404 will try #{root}=404 instead of returning a 404
    location @404 {
      return 404;
    }
	}
}
